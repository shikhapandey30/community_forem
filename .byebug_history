c
@posts = Post.all.where("expiration_date < ? && visibility = ?", Date.today, true)
@posts = Post.all.where("expiration_date < ? && visibility = ?", Date.today, true).count
@posts = Post.all.where("expiration_date < ? && visibility = ?", Date.today, true)
@posts = Post.all.where("expiration_date < ? && visibility is ?", Date.today, true)
@posts = Post.all.validity
@posts = Post.all.validity.count
@posts = Post.all.validity
Post.all.count
c
Post.all.count
Post.all
c
auth
auth.try(:info)
auth.try(:info).try(:first_name)
c
f.object.first_name
f.object
c
current_user.profile.present? ? current_user.profile : current_user.build_profile
c
User.search(params[:name])c
User.search(params[:name])
params[:name]
params
c
cc
c
params
User.search
continue
User.search { fulltext 'hemant' }
c
User.search { fulltext 'hemant' }
c
C
User.search { fulltext 'hemant' }
c
User.search { fulltext 'hemant' }
c
User.search { fulltext 'hemant' }
User.search { fulltext 'pizza' }
User.search
follow.followable.user
continue
follow.followable.user
follow.followable
continue
follow.follower
continue
follow
follow.followable
follow
c
User.search { fulltext 'pizza' }
c
User.search { fulltext 'pizza' }
Post.search { fulltext 'pizza' }
controller?("categories")Post.search { fulltext 'pizza' }
c
controller?("categories") && category.id.eql?(params[:id].to_i)
controller?("categories")
category.id.eql?(params[:id].to_i)
category.id.eql?(params[:id])
category
request.url
controller?("categories")
category
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
current_user
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse.collect(&:user)
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
current_user
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience)@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience)
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse.collect(&:user).flatten.map{|u| u.posts.order("updated_at desc")}.compact.flatten
EmploymentDetail.select{|e| e.total_experience}.sort_by(&:total_experience).reverse
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.reverse
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience desc}
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| [ex.total_experience desc]}
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience desc}
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}
Post.last
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order("updated_at desc")}.compact.flatten
c
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order("updated_at desc")}.compact.flattenc
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order("updated_at desc")}.compact.flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order("updated_at desc")}.copact.flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order("updated_at desc")}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order(:updated_at desc)}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.order(:updated_at desc)}.compact.flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.updated_at desc}}.compact.flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.updated_at}}.compact.flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.updated_at}}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.descript}}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.description}}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.descript}}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts.sort_by{|p| p.updated_at}}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.posts}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.collect(&:posts)
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.collect(&:posts).compact.flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.collect(&:posts).compact.flatten}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.id}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u| u.name}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.map{|u|}
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten
                    flatten
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).
@posts = EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user)
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}
c
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.collect(&:posts).compact.flattenc
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}.collect(&:user).flatten.collect(&:posts).compact.flatten
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}}.collect(&:user).flatten.collect(&:posts).compact.flatten
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}}.flatten.collect(&:user).flatten.collect(&:posts).compact.flatten
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}}.collect(&:user).flatten.collect(&:posts).compact.flatten
EmploymentDetail.select{|e| e.total_experience}.sort_by{|ex| ex.total_experience}
EmploymentDetail.select{|e| e.total_experience}.reorder(:total_experience)
EmploymentDetail.select{|e| e.total_experience}.order(:total_experience)
EmploymentDetail.select{|e| e.total_experience}
EmploymentDetail.select{|e| e.total_experience}.collect(&:user).flatten.collect(&:posts).compact.flatten
EmploymentDetail.select{|e| e.total_experience}
EmploymentDetail.select{|e| e.total_experience}.collect(&:user).flatten.collect(&:posts).compact.flatten
EmploymentDetail.select{|e| e.total_experience}.collect(&:user).flatten.collect(&:posts)
EmploymentDetail.select{|e| e.total_experience}.collect(&:user).flatten
EmploymentDetail.select{|e| e.total_experience}.collect(&:user)
EmploymentDetail.select{|e| e.total_experience}
EmploymentDetail.select{|em| em.total_experience}
EmploymentDetail.select{|em| em.total_experience}.map{|e| e.user.collect(&:posts)}
EmploymentDetail.select{|em| em.total_experience}
EmploymentDetail.select{|em| em.total_experience}.map{|e| e.user.collect(&:posts)}
EmploymentDetail.select{|em| em.total_experience}.map{|e| e.user}
EmploymentDetail.select{|em| em.total_experience}
EmploymentDetail.select{|em| em.total_experience}.collect(&:total_experience)
current_user.employment_details.update_all(:total_experience=>nil)
EmploymentDetail.select{|em| em.total_experience}.collect(&:total_experience)
EmploymentDetail.select{|em| em.total_experience}
EmploymentDetail
current_user.employment_details
current_user.employment_detail
current_user.employment_details
current_user.employment_details.update_all(:total_experience=>0)
current_user.employment_details
current_user.employment_details.update_all(:total_experience=>0)
current_user.employment_details
EmploymentDetail.all.order(:total_experience)
EmploymentDetail.all.order(:total_experence)
EmploymentDetail.order(:total_experence)
EmploymentDetail.order("&:total_experence")
EmploymentDetail.order(":total_experence")
EmploymentDetail.order("total_experence")
EmploymentDetail.order("total_experence").as_json
EmploymentDetail.order("total_experence")
EmploymentDetail.order(&:total_experence)
EmploymentDetail.all.order(&:total_experence)
EmploymentDetail.all.order {|em| em.total_experence}
EmploymentDetail.all.order_by {|em| em.total_experence}
EmploymentDetail.all.sort_by {|em| em.total_experence}
EmploymentDetail.sort_by{|em| em.total_experence}
EmploymentDetail
User.all.select{|u| u.employment_details.last.total_experience}
User.all.select{|u| u.employment_details.last.sory_by(:total_experience)}
User.all.select{|u| u.employment_details.last.sory_by(&:total_experience)}
User.all.select{|u| u.employment_details.last.sory_by(total_experience)}
User.all.select{|u| u.employment_details.last.total_experience}
User.all.select{|u| u.employment_details.last.total_experience}.order_by(&:total_experience)
User.all.select{|u| u.employment_details.last.total_experience}.order(&:total_experience)
User.all.select{|u| u.employment_details.last.total_experience}.sort_by(&:total_experience)
User.all.select{|u| u.employment_details.last.total_experience}.sort_by(:total_experience)
User.all.select{|u| u.employment_details.last.total_experience}
User.first.employment_details.last.update_column(:total_experience, 11)
User.first.employment_details.last.update_column(total_experience:, 11)
User.first.employment_details.last.update_column(total_experience:, 110
User.first.employment_details.last.total_experience
User.first.employment_details.last
User.first.employment_details
User.first
User.all.select{|u| u.employment_details.last.total_experience}.
User.all.select{|u| u.employment_details.last.total_experience}
User.all.select{|u| u.employment_details.last}
User.all.select{|u| u.employment_details}
User.all.employment_details
c
self.user.employment_details.last
self
self.user.employment_details.last.update_column(:total_experience, experience)
experience = (max_date.to_date - min_date.to_date).to_i
self.user.employment_details.last
experience = (max_date.to_date - min_date.to_date).to_i
(max_date.to_date - min_date.to_date).to_i
max_date.to_date - min_date.to_date
max_date - min_date
max_date = self.user.employment_details.collect(&:worked_till).max
min_date = self.user.employment_details.collect(&:start_work_date).min
self.user.employment_details.collect(&:worked_till).max
self.user.employment_details.collect(&:worked_till)
self.user.employment_details.collect(&:start_work_date).min
self.user.employment_details.collect(&:worked_till)
self.user.employment_details.collect(&:start_work_date)
self.user.employment_details
self.user.emplyement_details
self.user
self
current_user
c
params[:data]=="hot_topic"
params
c
experience = self.user.employment_details.sum(:experience)
self.experience = experience + (self.worked_till.to_date - self.start_work_date.to_date).to_i
experience = self.user.employment_details.sum(:experience)self.experience = experience + (self.worked_till.to_date - self.start_work_date.to_date).to_i
experience = self.user.employment_details.sum(:experience)
c
users
users[:user]=User.first
users={}
{{1, 98},{2, 44}}
{{1, 98},{2, 44}}.max
(ed.worked_till.to_date - ed.start_work_date.to_date).to_i
ed.worked_till.to_date - ed.start_work_date.to_date
ed.worked_till - ed.start_work_date
ed=User.first.employment_details.last
ed=User.first.employment_details.first
User.first.employment_details
c
User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till).max
User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min
(User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till).max.to_date - User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min.to_date).to_i
User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till).max.to_date - User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min.to_date.to_i
User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till).max.to_date - User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min.to_date
User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till).max - User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min
User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till).max
User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min
User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date)User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date).min
User.all.collect(&:employment_details).compact.flatten.collect(&:worked_till)
User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date)
User.all.collect(&:employment_details).compact.flatten.collect(&)
User.all.collect(&:employment_details).compact.flatten
User.all.collect(&:employment_details).compact.flatten.collect(&:start_work_date)
User.all.collect(&:employment_details).compact.collect(&:start_work_date)
User.all.collect(&:employment_details).compact.collect(:start_work_date)
User.all.collect(&:employment_details).compact
User.all.collect(&:employment_details)
