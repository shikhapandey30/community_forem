c
 !current_user.email.eql?("admin@example.com")
 current_user.nil?
 current_user.nil? || !current_user.email.eql?("admin@example.com")
authenticate_or_request_with_http_basic('Login required')
Rails.application.secrets.user 
Rails.application.secrets.user
username
c
password
current_user
c
current_user
username
params
c
redirect_to root_url
redirect_to '/'
redirect_to root_path
password=''
username=''
current_user.nil? || !current_user.email.eql?("admin@example.com")
c
current_user.nil? || !current_user.email.eql?("admin@example.com")
current_user.nil? || current_user.email.eql?("admin@example.com")
current_user.nil?
username
password
current_user.nil?
current_user
c
current_user.try(:admin?)
controller
c
current_user
current_user.try(:admin?)
c
config
config.current_user_method(&:current_user).as_json
config.current_user_method(&:current_user)
password == Rails.application.secrets.password
username == Rails.application.secrets.user 
password
username
c
authenticate_or_request_with_http_basic('Login required') 
username
c
authenticate_or_request_with_http_basic('Login required')
config.authorize_with.as_json
config.authorize_with
c
@post.update :user_id=>3
@post.update user_id=>3
@post.user
@post.create
@post
c
@post= Post.find(params[:id])
params
c
@post
@post.save
@post = current_user.posts.new(post_params)
@post = Post.new(post_params)
post_params
@post = Post.new(post_params)
params
c
 @post.save
@post = Post.new(post_params)
params
c
params
prams
c
current_user.update_attributes(profile_params)
params
c
current_user.skills
current_user.update_attributes(profile_params)
params
params\
c
current_user.skills.present? ? current_user.skills : current_user.skills.new
current_user.skills ? current_user.skills : current_user.skills.new
c
current_user.profile ? current_user.profile : current_user.build_profile
current_user.profile.id.present? ? current_user.profile : current_user.build_profile
<%= render 'form' %>
<h1>New Profile</h1>
<%=render 'layouts/navbar_header'%>
c
params
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
c
category.users_categories.where(:user_id=>current_user.id).present? ? '3' : '23'
category.users_categories.present? ? '3' : '23'
category.users_categories ? '3' : '23'
category.users_categories ? '3' : '3'
category.users_categories
cat.users_categories
cat
c
UsersCategory.all.collect(&:user_id)
UsersCategory.all.collect(&:user)
UsersCategory.all
current_user.update_attributes(profile_params)
params
c
Category.all.count
Category.all
debugger
c
params
patams
c
current_user.categories.count
current_user.categories.count'
current_user.update_attributes(profile_params)
params
c
params
c
c.object.name
c
c.object.name
c.object
c
current_user.categories.create(name: "chess")
current_user.categories.create(name: "football")
current_user.categories.create(name: "cricket")
current_user.categories.destroy_all
c
c.object.name
c.object
cat
c
cat
params
c
params
c
current_user.update_attributes(profile_params)
params
c
params
c
params
current_user.update_attributes(profile_params)
params
c
current_user.update_attributes(profile_params)
params
c
current_user.update_attributes(profile_params)
c
current_user.update_attributes(profile_params)
c
current_user.update_attributes(profile_params)
c
current_user.update_attributes(profile_params)
c
current_user.update_attributes(profile_params)
params.require(:user).permit!
current_user.update_attributes({"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}})
params
c
current_user.update_attributes({"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}})
params.require(:user).permit!
current_user.skills.present? ? current_user.skills : current_user.skills.new
params
current_user.update({"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}})
current_user.update_attributes({"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}})
current_user.update_attribute({"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}})
current_user.update_attributes({"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}})
current_user.update_attributes( {"user"=>{"profile"=>{"first_name"=>"", "last_name"=>"", "country"=>"", "city"=>"dfsdfsd", "street"=>"sdfs", "post_code"=>"", "phone_no"=>"", "dob"=>"", "screen_name"=>"sdf", "location"=>""}}})
current_user.update_attributes(params.require(:user).permit!)
params.require(:user).permit!
c
params.require(:user).permit!
current_user.update_attributes(params.require(:user).permit!)
current_user.update_attributes(profile_params)
params.require(:user).permit!
params.require(:user)
params
c
params
c
current_user.skills
current_user.skills.destroy_all
current_user.skills
current_user.skills.destroy
current_user.skills.destroly
current_user.skills
params
c
params
c
params
c
params
c
params
c
params
c
params
.
~
c
params
c
params
c
params
c
params
c
current_user.profile
current_user
Profile.last
Profile.all
Profile
current_user.profile
current_user.profile.try(:id) ? current_user.profile : current_user.build_profile
c
params
c
params
c
~c
current_user.skills.present? ? current_user.skills : current_user.skills.new
c
\
c
\c
params
c
